出行分割算法：
将一个人的位置信息按时间排序，并去掉连续重复的位置，得到一个人的整个位置链，为了得到出行链需要判断在每个位置是一个停留，还是在出行，判断一个位置是停留有两种情况：
   1）若上一个位置的离开时间与当前位置的到达时间之差大于一个阈值，则判断当前位置与上个位置都为一个停留；一般采用的阈值为30分钟或10分钟。
   2）若在当前位置的达到时间与离开时间之差大于一个阈值，则判断当前位置为一个停留；一般采用的阈值为30分钟或10分钟。
将位置链从停留位置分割开之后，并将出行链中包含的位置点小于一定量（一般是5）的剔除掉，即得到一个人的所有出行链。

示例：
数据排序后：
time,cell
09:46:30,3
09:47:30,3
09:48:30,4
09:50:30,5
10:47:30,3
11:03:30,5
11:30:30,5
12:47:30,5
12:57:30,6
13:01:30,6
13:07:30,6
13:27:30,7
13:47:30,7
14:47:30,3
14:57:30,3

去掉连续重复的位置后
start_time,end_time,cell
09:46:30,09:47:30,3
09:48:30,09:48:30,4
09:50:30,09:50:30,5
10:47:30,10:47:30,3
11:03:30,12:47:30,5
12:57:30,13:07:30,6
13:27:30,13:47:30,7
14:47:30,14:57:30,3

对每条记录判断是否是停留，1为是，0为否，假设阈值都是30分钟
start_time,end_time,cell
09:46:30,09:47:30,3,0
09:48:30,09:48:30,4,0
09:50:30,09:50:30,5,1(满足1)
10:47:30,10:47:30,3,1(满足1)
11:03:30,12:47:30,5,1(满足2)
12:57:30,13:07:30,6,0
13:27:30,13:47:30,7,1(满足1)
14:47:30,15:57:30,3,1(满足1，2)

生成出行后
start_time,end_time,cells
09:47:30,09:50:30,3|4|5
09:50:30,10:47:30,5|3
10:47:30,11:03:30,3|5
12:47:30,13:27:30,5|6|7
13:47:30,14:47:30,7|3

过滤，假定小于3个被剔除
09:47:30,09:50:30,3|4|5
12:47:30,13:27:30,5|6|7


将一个人的位置信息按时间排序，并去掉连续重复的位置，得到一个人的整个位置链，为了得到出行链需要判断在每个位置是一个停留，还是在出行，判断一个位置是停留有两种情况：
   1）若上一个位置的离开时间与当前位置的到达时间之差大于一个阈值，则判断当前位置与上个位置都为一个停留；一般采用的阈值为30分钟或10分钟。
   2）若在当前位置的达到时间与离开时间之差大于一个阈值，则判断当前位置为一个停留；一般采用的阈值为30分钟或10分钟。
将位置链从停留位置分割开之后，并将出行链中包含的位置点小于一定量（一般是5）的剔除掉，即得到一个人的所有出行链。
